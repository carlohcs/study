apiVersion: v1
kind: Pod
metadata:
  name: host-pod-volume
spec:
  containers:
    - name: nginx-container
      image: nginx:latest
      volumeMounts:
        - mountPath: /volume-inside-of-container
          name: first-volume
    - name: jenkins-container
      image: jenkins:2.60.1-alpine
      volumeMounts:
        - mountPath: /volume-inside-of-container
          name: first-volume
  volumes:
    - name: first-volume
      hostPath:
        # We need to activate the file sharing at the Docker
          # Settings / Resources / File Sharing
        # Windows
        # path: /C/Users/Carlos/repository/study/career-improvements/devops/kubernetes/kubernetes-pods-services-configmap/portal/volume
        path: /Users/carlohcs/Documents/repository/study/career-improvements/devops/kubernetes/kubernetes-pods-services-configmap/portal/volume
        type: Directory
      # https://kubernetes.io/docs/tasks/administer-cluster/change-pv-reclaim-policy/
      # Retain | Recycle | Delete
      # PersistentVolumes can have various reclaim policies, including "Retain", "Recycle", and "Delete". 
      # For dynamically provisioned PersistentVolumes, the default reclaim policy is "Delete". 
      # This means that a dynamically provisioned volume is automatically deleted when a user deletes the corresponding PersistentVolumeClaim. 
      # This automatic behavior might be inappropriate if the volume contains precious data. In that case, it is more appropriate to use the "Retain" policy. 
      # With the "Retain" policy, if a user deletes a PersistentVolumeClaim, the corresponding PersistentVolume will not be deleted. 
      # Instead, it is moved to the Released phase, where all of its data can be manually recovered.
      persistentVolumeClaimPolicy: Retain
