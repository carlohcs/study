!function(){var e=Handlebars.template,t=Handlebars.templates=Handlebars.templates||{};t["Todo/todo"]=e({compiler:[6,">= 2.0.0-beta.1"],main:function(e,t,i,o){return'<div class="row container">\n  <div class="large-8 large-offset-2 columns">\n    <header id="header">\n      <h1 class="text-center">todos</h1>\n    </header>\n    <section id="main">\n      <h2 class="text-center subheader"><span class="check"><i class="fi-check"></i></span> What needs to be done?</h2>\n      <div class="row">\n        <div class="columns">\n          <div id="todo-list-region"></div>\n          <!--<div id="status">\n            <div class="row">\n              <div class="large-3 columns">\n                <span>1 task left</span>\n              </div>\n              <div class="large-6 columns text-center">\n                <a href="">all</a>\n                <a href="">completed</a>\n                <a href="">uncompleted</a>\n              </div>\n              <div class="large-3 columns text-right">\n                <a href="">mark all as completed</a>\n              </div>\n            </div>\n          </div>-->\n        </div>\n      </div>\n    </section>\n    <footer id="footer">\n      <div id="info">\n        <p class="text-center">\n          Double click to edit a todo\n        </p>\n        <p class="text-center">\n          Written by <a href="http://www.github.com/carlohcs">@carlohcs</a> - 2016\n        </p>\n      </div>\n    </footer>\n  </div>\n</div>\n'},useData:!0}),t["TodoItem/item"]=e({1:function(e,t,i,o){return" closed "},compiler:[6,">= 2.0.0-beta.1"],main:function(e,t,i,o){var n,l,a="function",s=t.helperMissing,c=this.escapeExpression,d='<div class="';return n=t["if"].call(e,null!=e?e.completed:e,{name:"if",hash:{},fn:this.program(1,o),inverse:this.noop,data:o}),null!=n&&(d+=n),d+'">\n  <!--<span class="check"><input type="checkbox" /></span>-->\n  <span class="check"><i class="fi-check"></i></span>\n  <span class="destroy right"><i class="fi-x"></i></span>\n  <label class=\'title\'>'+c((l=null!=(l=t.title||(null!=e?e.title:e))?l:s,typeof l===a?l.call(e,{name:"title",hash:{},data:o}):l))+"</label>\n  <input class='edit' value='"+c((l=null!=(l=t.title||(null!=e?e.title:e))?l:s,typeof l===a?l.call(e,{name:"title",hash:{},data:o}):l))+"' />\n</div>\n"},useData:!0})}(),function(e,t){e.app={},app.container="#todo-app",app.TPL=t.templates,app.logger=function(){var e="[TODO APP] ",t={log:function(){console.log(e,Array.prototype.slice.call(arguments).join("."))}};return t}()}(this,Handlebars);var app=app||{},TodoCollection=Backbone.Collection.extend({model:app.TodoItem,localStorage:new Backbone.LocalStorage("todos-backbone"),completed:function(){return this.filter(function(e){return e.get("completed")})},remaining:function(){return this.without.apply(this,this.completed())},nextOrder:function(){return this.length?this.last().get("order")+1:1},comparator:function(e){return e.get("order")}});app.TodoCollection=new TodoCollection;var app=app||{};app.TodoView=Backbone.View.extend({el:app.container,template:app.TPL["Todo/todo"],events:{"keypress #new-todo":"createOnEnter","click #clear-completed":"clearCompleted","click #toggle-all":"toggleAllComplete"},initialize:function(){this.listenTo(app.TodoCollection,"add",this.addOne).listenTo(app.TodoCollection,"reset",this.addAll).listenTo(app.TodoCollection,"change:completed",this.filterOne).listenTo(app.TodoCollection,"filter",this.filterAll).listenTo(app.TodoCollection,"all",this.render),app.TodoCollection.fetch()},setUiElements:function(){this.$newTodo=this.$("#new-todo"),this.$footer=this.$("#footer"),this.$main=this.$("#main"),this.$todoListRegion=this.$("#todo-list-region"),this.todoList=this.$("#todo-list")},addOne:function(e){var t=new app.TodoItemView({model:e});this.$todoList.append(t.render().$el)},addAll:function(){this.$todoList.html(""),app.Todos.each(this.add.addOnem,this)},filterOne:function(e){e.trigger("visible")},filterAll:function(){app.TodoCollection.each(this.filterOne,this)},newAttributes:function(){return{title:this.$input.val().trim(),order:app.TodoCollection.nextOrder(),completed:!1}},createOnEnter:function(e){e.which===ENTER_KEY&&this.$input.val().trim()&&(app.TodoCollection.create(this.newAttributes()),this.$input.val(""))},clearCompleted:function(){return _.invoke(app.TodoCollection(),"destroy"),!1},toggleAllComplete:function(){var e=this.allCheckbox.checked;app.TodoCollection.each(function(t){t.save({completed:e})})},render:function(){var e=app.TodoCollection.completed().length,t=app.TodoCollection.remaining().length;this.$el.html(this.template({completed:e,remaining:t})),this.setUiElements(),app.TodoCollection.length?(this.$main.show(),this.$footer.show()):(this.$main.hide(),this.$footer.hide())}});var app=app||{};app.TodoItemModel=Backbone.Model.extend({defaults:{title:"",completed:!1},toggle:function(){this.save({completed:!this.get("completed")})}});var app=app||{},TodoItemView=Backbone.Marionette.ItemView.extend({tagName:"li",className:"todo-item",template:app.TPL["TodoItem/item"],ui:{check:".check",destroy:".destroy",title:".title",edit:".edit"},events:{"click @ui.check":"toggleCheck","dblclick @ui.title":"edit","click @ui.destroy":"destroy","keypress @ui.edit":"updateOnEnter","blur @ui.edit":"cancel"},initialize:function(){this.listenTo(this.model,"change",this.render)},edit:function(e){var t=$(e.target),i=t.closest("div");i.addClass("active"),this.$input.focus()},destroy:function(e){var t=$(e.target),i=t.closest("li");i.slideUp()},cancel:function(e){var t=$(e.target),i=t.closest("div");e.keyCode===ENTER_KEY&&this.isActive()&&i.removeClass("active")},isActive:function(){return this.$el.find("div").hasClass("active")},close:function(){var e=this.$input.val().trim();e&&this.model.save({title:e}),this.$el.find("div").removeClass("active")},updateOnEnter:function(e){e.which===ENTER_KEY&&this.close()},render:function(){return this.$el.html(this.template(this.model.toJSON())),this}});app.TodoItemView=TodoItemView;
//# sourceMappingURL=../sourcemaps/application.js.map
